<?xml version="1.0"?>
<launch>
    <!-- MAVROS posix SITL environment launch script -->
    <!-- launches MAVROS, PX4 SITL, Gazebo environment, and spawns vehicle -->
    <!-- vehicle pose -->
    <arg name="x" default="0"/>
    <arg name="y" default="0"/>
    <arg name="z" default="0"/>
    <arg name="R" default="0"/>
    <arg name="P" default="0"/>
    <arg name="Y" default="0"/>
    <!-- vehicle model and world -->
    <arg name="est" default="ekf2"/>
    <arg name="vehicle" default="f450_sensors"/>
    <arg name="world" default="$(find mavlink_sitl_gazebo)/worlds/empty.world"/>
    <arg name="sdf" default="$(find mavlink_sitl_gazebo)/models/$(arg vehicle)/$(arg vehicle).sdf"/>

    <!-- gazebo configs -->
    <arg name="gui" default="true"/>
    <arg name="debug" default="false"/>
    <arg name="verbose" default="false"/>
    <arg name="paused" default="false"/>
    <arg name="respawn_gazebo" default="false"/>
    <!-- MAVROS configs -->
    <arg name="fcu_url" default="udp://:14540@localhost:14557"/>
    <arg name="respawn_mavros" default="false"/>
    <!-- PX4 configs -->
    <arg name="interactive" default="true"/>
    <!-- PX4 SITL and Gazebo -->
    <include file="$(find px4)/launch/posix_sitl.launch">
        <arg name="x" value="$(arg x)"/>
        <arg name="y" value="$(arg y)"/>
        <arg name="z" value="$(arg z)"/>
        <arg name="R" value="$(arg R)"/>
        <arg name="P" value="$(arg P)"/>
        <arg name="Y" value="$(arg Y)"/>
        <arg name="world" value="$(arg world)"/>
        <arg name="vehicle" value="$(arg vehicle)"/>
        <arg name="sdf" value="$(arg sdf)"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="interactive" value="$(arg interactive)"/>
        <arg name="debug" value="$(arg debug)"/>
        <arg name="verbose" value="$(arg verbose)"/>
        <arg name="paused" value="$(arg paused)"/>
        <arg name="respawn_gazebo" value="$(arg respawn_gazebo)"/>
    </include>
    <!-- MAVROS -->
    <include file="$(find mavros)/launch/px4.launch">
        <!-- GCS link is provided by SITL -->
        <arg name="gcs_url" value=""/>
        <arg name="fcu_url" value="$(arg fcu_url)"/>
        <arg name="respawn_mavros" value="$(arg respawn_mavros)"/>
    </include>

    <node pkg="gmapping" type="slam_gmapping" name="slam">
        <remap from="scan" to="/laser/scan" />
    </node>

    <!--
    <node pkg="learning_tf2" name="camera_tf" type="tf2_test_camera.py" output="screen" />
    <node pkg="learning_tf2" name="lidar_tf" type="tf2_test_lidar.py" output="screen" />
    -->

    <node pkg="mavros" name="camera_tf" type="tf_add.py" output="screen" args="camera camera_link base_link 0.1 0 0 0 0 0"/>

    <node pkg="mavros" name="lidar_tf" type="tf_add.py" output="screen" args="lidar laser_link base_link 0 0 0.1 0 0 0"/>

    <node pkg="mavros" name="right_sonar_tf" type="tf_add.py" output="screen" args="right_sonar right_sonar_link base_link 0 -0.2 0.05 0 0 -1.57"/>
    <node pkg="mavros" name="left_sonar_tf" type="tf_add.py" output="screen" args="left_sonar left_sonar_link base_link 0 0.2 0.05 0 0 1.57"/>
    <node pkg="mavros" name="rear_sonar_tf" type="tf_add.py" output="screen" args="rear_sonar rear_sonar_link base_link -0.2 0 0.05 0 0 3.14"/>
    <node pkg="mavros" name="front_sonar_tf" type="tf_add.py" output="screen" args="front_sonar front_sonar_link base_link 0.2 0 0.05 0 0 0"/>
    <node pkg="mavros" name="down_sonar_tf" type="tf_add.py" output="screen" args="down_sonar down_sonar_link base_link -0.05 0 0 0 1.57 0"/>

    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find mavros)/mavros.rviz" output="screen"/>

    <node pkg="mavros" name="cmd_vel_mapping" type="cmd_vel_mapping.py" output="screen"/>

    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <rosparam file="$(find test_02)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find test_02)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find test_02)/config/local_costmap_params.yaml" command="load" />
        <rosparam file="$(find test_02)/config/global_costmap_params.yaml" command="load" />
        <rosparam file="$(find test_02)/config/base_local_planner_params.yaml" command="load" />
    </node>
</launch>
